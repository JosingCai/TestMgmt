# Generated by Django 3.0.2 on 2020-03-10 12:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('AutoModel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductDir',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('name_cn', models.CharField(blank=True, default='', help_text='请输入用例模块', max_length=50, verbose_name='目录名称')),
                ('name_en', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')], verbose_name='目录名称')),
                ('remark', models.TextField(blank=True, default='', help_text='请输入备注', null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '产品目录树',
                'verbose_name_plural': '产品目录树',
                'db_table': 'productdir',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='Product_Gitlab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo', models.CharField(blank=True, default='http://gitlab.idcos.com', help_text='请输入gitlab url', max_length=50, verbose_name='URL')),
                ('product_id', models.CharField(default='', help_text='请输入产品', max_length=50, verbose_name='产品')),
                ('rss_token', models.CharField(blank=True, default='', help_text='请输入rss_token', max_length=50, verbose_name='RSS_TOKEN')),
                ('milestone', models.CharField(default='all', help_text='请输入milestone', max_length=50, verbose_name='版本分支')),
                ('remark', models.TextField(blank=True, default='', help_text='请输入备注', null=True, verbose_name='备注')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitlab_project', to='AutoModel.Host', verbose_name='关联项目')),
            ],
            options={
                'verbose_name': 'Gitlab列表',
                'verbose_name_plural': 'Gitlab列表',
                'db_table': 'product_gitlab',
                'ordering': ['product_id'],
                'unique_together': {('project', 'product_id', 'milestone')},
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('case_number', models.CharField(help_text='请输入用例编号', max_length=50, primary_key=True, serialize=False, verbose_name='用例编号')),
                ('case_name', models.CharField(blank=True, default='', help_text='请输入用例名称', max_length=255, null=True, verbose_name='用例名称')),
                ('case_type', models.CharField(blank=True, choices=[('基本功能测试', '基本功能测试'), ('场景测试', '场景测试'), ('异常测试', '异常测试'), ('长时间测试', '长时间测试'), ('压力测试', '压力测试'), ('UI交互测试', 'UI交互测试')], default='基本功能测试', help_text='请选择测试类型', max_length=10, null=True, verbose_name='用例类型')),
                ('priority', models.CharField(blank=True, choices=[('Level0', 'Level0'), ('Level1', 'Level1'), ('Level2', 'Level2'), ('Level3', 'Level3'), ('Level4', 'Level4'), ('Level5', 'Level5')], default='Level0', help_text='请选择优先级', max_length=6, null=True, verbose_name='优先级')),
                ('pre_condition', models.TextField(blank=True, default='', help_text='请输入预置条件', null=True, verbose_name='预置条件')),
                ('test_range', models.TextField(blank=True, default='', help_text='请输入测试范围', null=True, verbose_name='测试范围')),
                ('test_steps', models.TextField(blank=True, default='', help_text='请输入测试步骤', null=True, verbose_name='测试步骤')),
                ('expect_result', models.TextField(blank=True, default='', help_text='请输入预期结果', null=True, verbose_name='预期结果')),
                ('auto', models.CharField(blank=True, choices=[('yes', 'yes'), ('no', 'no')], default='yes', help_text='请选择自动化模式', max_length=3, null=True, verbose_name='是否自动化')),
                ('fun_developer', models.CharField(blank=True, choices=[('汤天云', '汤天云'), ('胡协江', '胡协江'), ('彭甘雨', '彭甘雨'), ('谢恩信', '谢恩信'), ('陈佳林', '陈佳林'), ('宋旭源', '宋旭源'), ('彭甘雨', '彭甘雨'), ('谢小芹', '谢小芹'), ('魏翔', '魏翔'), ('赵浩峰', '赵浩峰'), ('未分配', '未分配')], default='未分配', help_text='请选择开发人员', max_length=10, null=True, verbose_name='功能开发者')),
                ('case_designer', models.CharField(blank=True, choices=[('蔡姣行', '蔡姣行'), ('陈珊珊', '陈珊珊'), ('聂梦佳', '聂梦佳'), ('邓倩', '邓倩'), ('张静悦', '张静悦'), ('张丹谨', '张丹谨'), ('未分配', '未分配')], default='未分配', help_text='请选择用例设计人员', max_length=10, null=True, verbose_name='用例设计者')),
                ('case_executor', models.CharField(blank=True, choices=[('蔡姣行', '蔡姣行'), ('陈珊珊', '陈珊珊'), ('聂梦佳', '聂梦佳'), ('邓倩', '邓倩'), ('张静悦', '张静悦'), ('张丹谨', '张丹谨'), ('未分配', '未分配')], default='未分配', help_text='请选择用例执行人员', max_length=10, null=True, verbose_name='用例执行者')),
                ('test_time', models.DateTimeField(auto_now=True, help_text='请选择测试时间', null=True, verbose_name='测试时间')),
                ('test_result', models.CharField(blank=True, choices=[('PASS', 'PASS'), ('FAIL', 'FAIL'), ('未测试', '未测试'), ('废弃', '废弃'), ('未合入', '未合入')], default='未测试', help_text='请选择测试结果', max_length=5, null=True, verbose_name='测试结果')),
                ('module', models.CharField(blank=True, default='', help_text='请输入用例模块', max_length=255, null=True, verbose_name='用例模块')),
                ('remark', models.TextField(blank=True, default='', help_text='请输入备注', null=True, verbose_name='备注')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AutoModel.Dependency', verbose_name='关联API')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AutoModel.Host', verbose_name='关联项目')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'db_table': 'testcase',
                'ordering': ['case_number'],
                'unique_together': {('project', 'case_number')},
            },
        ),
    ]
